"use strict";!function(a){a(document).on("woof_ajax_done",woof_ajax_done_handler),a(document).ready(function(){change_view_btn_event(),a.ajax({url:php_prefix_loadmore_params.ajaxurl,data:{action:"load_skeleton"},type:"GET",success:function(e){localStorage.setItem("product_grid_skeleton",e.data["skeleton-grid"]),localStorage.setItem("product_list_skeleton",e.data["skeleton-list"])}}),a(document.body).on("woosq_loaded",function(e){a(".thumbnails").addClass("iq-rtl-direction")}),t=a.fn.css;var o=new a.Event("stylechanged"),t=a.fn.css;a.fn.css=function(){var e=t.apply(this,arguments);return a(this).trigger(o),e},setTimeout(function(){a(".woof_info_popup").on("stylechanged",function(){a(this).append('<div class="css_prefix-show-loader-overlay"></div>')})},500)})}(jQuery);var can_loaded_product_view=!0;function getCookie(e){e="; ".concat(document.cookie).split("; ".concat(e,"="));if(2===e.length)return e.pop().split(";").shift()}function setCookie(e,o){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:1,a=new Date;a.setTime(a.getTime()+24*t*60*60*1e3);t="expires="+a.toUTCString(),isSubdomain(),a="."+window.location.hostname;document.cookie=e+"="+o+"; "+t+"; Path=/;"+a}function ajax_product(r,s){jQuery.ajax({url:window.location.href,data:{loaded_paged:php_prefix_loadmore_params.current_page},type:"POST",beforeSend:function(e){if("product_grid_skeleton"==s)for(var o=getCookie("product_view[col_no]"),t=jQuery(localStorage.getItem(s)).siblings(".column-"+o),a=0;a<o;a++)r.append(t.clone());else r.append(jQuery(localStorage.getItem(s)));can_loaded_product_view=!1,jQuery(".woocommerce-pagination").addClass("hide"),jQuery(".woocommerce-pagination").removeClass("show")},success:function(e){e&&(e=jQuery(e),jQuery(".products").replaceWith(e.find(".products")),r.find(".skeleton-main").remove(),loadmore_product(),can_loaded_product_view=!0,jQuery(".woocommerce-pagination").removeClass("hide"),jQuery(".woocommerce-pagination").addClass("show")),wp.hooks.doAction("yith_wcwl_init_add_to_wishlist_components")}})}var isSubdomain=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:window.location.hostname,o=new RegExp(/^([a-z]+\:\/{2})?([\w-]+\.[\w-]+\.\w+)$/);return!!e.match(o)};function change_view_btn_event(){jQuery(".css_prefix-view-grid,.css_prefix-listing").on("click",function(){var e=jQuery(this),o=e.parents(".sorting-wrapper").next(".products");e.hasClass("active")||jQuery("#woof_html_buffer").is(":visible")||!can_loaded_product_view||(setCookie("product_view[col_no]",e.hasClass("css_prefix-view-grid")?e.data("grid"):"1"),setCookie("product_view[is_grid]",e.hasClass("css_prefix-view-grid")?"2":"1"),jQuery(".css_prefix-product-view-buttons .btn").removeClass("active"),e.addClass("active"),e.hasClass("css_prefix-listing")?(o.find(".product").fadeOut(0,function(){jQuery(this).remove()}),e.parents(".product-grid-style").removeClass("product-grid-style").addClass("product-list-style"),ajax_product(o,"product_list_skeleton")):1!=e.parents(".product-grid-style").length&&(o.find(".product").fadeOut(0,function(){jQuery(this).remove()}),e.parents(".product-list-style").removeClass("product-list-style").addClass("product-grid-style"),ajax_product(o,"product_grid_skeleton")),setTimeout(function(){void 0!==e.data("grid")?o.removeClass("columns-2 columns-3 columns-4").addClass("columns-"+e.data("grid")):o.removeClass(" columns-2 columns-3 columns-4"),o.addClass("animated-product")},100),o.removeClass("animated-product"))})}function woo_ordering(){0<jQuery("select").length&&(jQuery("select").each(function(){jQuery(this).select2({width:"100%",dropdownParent:jQuery(this).parent()})}),jQuery(".select2-container").addClass("wide"))}function woof_ajax_done_handler(e){change_view_btn_event(),loadmore_product(jQuery(".css_prefix-product-main-list").data("options")),php_prefix_loadmore_params.current_page=1,jQuery.ajax({url:php_prefix_loadmore_params.ajaxurl,data:{action:"fetch_woof_filter_ajax_query"},type:"POST",success:function(e){(e=JSON.parse(e))&&(php_prefix_loadmore_params.posts=e.query,php_prefix_loadmore_params.max_page=e.max_page)}}),jQuery("select").select2({theme:"bootstrap4",allowClear:!1,width:"resolve"}),woo_ordering()}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,